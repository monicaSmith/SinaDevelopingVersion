question:how to debug to  SendWeibo activity to see if "message" value is null??????????

MainActivity
package com.example.monica.sinatest;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import com.sina.weibo.sdk.auth.AuthInfo;
import com.sina.weibo.sdk.auth.Oauth2AccessToken;
import com.sina.weibo.sdk.auth.WeiboAuthListener;
import com.sina.weibo.sdk.auth.sso.SsoHandler;
import com.sina.weibo.sdk.exception.WeiboException;
import java.text.SimpleDateFormat;
public class MainActivity extends Activity{
    SsoHandler ssoHandler;
    AuthInfo authInfo;
    TextView textView_tokenInfo;
    EditText editText_message;
    Oauth2AccessToken oauth2AccessToken;
    //send weibo
    Button button_sendWeibo;
    //auth
    Button auth;
    public void onCreate(Bundle savedInstanceState){
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //auth
        textView_tokenInfo=(TextView)findViewById(R.id.textView_tokenInfo);
        authInfo=new AuthInfo(MainActivity.this,Constants.APP_KEY,Constants.REDIRECT_URL,Constants.SCOPE);
        ssoHandler=new SsoHandler(MainActivity.this,authInfo);
        ((Button)findViewById(R.id.auth)).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ssoHandler.authorize(new WeiboAuth());
            }
        });

        //send weibo
        editText_message=(EditText)findViewById(R.id.editText_message);
        ((Button)findViewById(R.id.button_sendWeibo)).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String messageWeibo=editText_message.getText().toString();
                startActivity(MainActivity.this,SendWeibo.class,messageWeibo);////////////////////how to debug to  SendWeibo activity??????????

            }
        });
    }

    //传入发送微博的字
    public void startActivity(Context context,Class activity,String m){
        Intent intent=new Intent(context,activity);
        Bundle bundle=new Bundle();
        bundle.putString("message",m);
        intent.putExtra("message",bundle);
        startActivity(intent);
    }
    public class WeiboAuth implements WeiboAuthListener{
            @Override
            public void onComplete(Bundle bundle) {
                oauth2AccessToken=Oauth2AccessToken.parseAccessToken(bundle);
                if(oauth2AccessToken.isSessionValid()){

                    AccessTokenKeeper accessTokenKeeper=new AccessTokenKeeper();
                    accessTokenKeeper.writeToken(MainActivity.this,oauth2AccessToken);
                    toast("auth success");
                    //MainActivity.this.oauth2AccessToken = oauth2AccessToken;
                    updateTokenView(false);
                }
                else{
                    String message="auth failed";
                    String code=bundle.getString("code");
                    if(!TextUtils.isEmpty(code)){
                        message=message+"code>>>>>>>>>>"+code;
                    }
                    toast(message);
                }
            }
            @Override
            public void onWeiboException(WeiboException e) {
                toast("exception>>>>>>>>>>>>>>>>>>>>>>>"+e.getMessage());
            }
            @Override
            public void onCancel() {
                toast("weibo cancelled");
            }
    }
    private void updateTokenView(boolean hasExisted) {
        if(oauth2AccessToken.equals(null)||oauth2AccessToken.equals(""))
            toast("null access token ");
        else {
            String date = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(new java.util.Date(oauth2AccessToken.getExpiresTime()));
            String format = getString(R.string.token);
            textView_tokenInfo.setText(String.format(format, oauth2AccessToken.getToken(), date));
            String message = String.format(format, oauth2AccessToken.getToken(), date);
            if (hasExisted) {
                message = getString(R.string.if_token_exit) + "\n" + message;
            }
            textView_tokenInfo.setText(message);
        }
    }
    public void toast(String info){
        Toast.makeText(MainActivity.this,info,Toast.LENGTH_SHORT).show();
    }
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        // SSO 授权回调
        // 重要：发起 SSO 登陆的 Activity 必须重写 onActivityResults
        if (ssoHandler != null) {
            ssoHandler.authorizeCallBack(requestCode, resultCode, data);
        }
        else{
            toast("ss handler is null");
        }
        updateTokenView(false);
    }
   }


SendWeibo
package com.example.monica.sinatest;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.widget.Toast;
import com.sina.weibo.sdk.api.TextObject;
import com.sina.weibo.sdk.api.WeiboMultiMessage;
import com.sina.weibo.sdk.api.share.BaseResponse;
import com.sina.weibo.sdk.api.share.IWeiboHandler;
import com.sina.weibo.sdk.api.share.IWeiboShareAPI;
import com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest;
import com.sina.weibo.sdk.api.share.WeiboShareSDK;
import com.sina.weibo.sdk.auth.AuthInfo;
import com.sina.weibo.sdk.auth.Oauth2AccessToken;
import com.sina.weibo.sdk.auth.WeiboAuthListener;
import com.sina.weibo.sdk.constant.WBConstants;
import com.sina.weibo.sdk.exception.WeiboException;
import org.w3c.dom.Text;
/**
 * Created by monica on 8/9/16.
 */
public class SendWeibo extends Activity implements IWeiboHandler.Response{
    IWeiboShareAPI weiboShareSDK;//register app and so on
    String weiboMessage;
    public void onCreate(Bundle savedInstanceState){
        super.onCreate(savedInstanceState);
        //receive messages from MainActivity
        Bundle bundle=getIntent().getBundleExtra("message");
        weiboMessage=bundle.getString("message","null");
        weiboShareSDK=WeiboShareSDK.createWeiboAPI(SendWeibo.this,Constants.APP_KEY);
        //register
        weiboShareSDK.registerApp();
        // 当 Activity 被重新初始化时（该 Activity 处于后台时，可能会由于内存不足被杀掉了），
        // 需要调用 {@link IWeiboShareAPI#handleWeiboResponse} 来接收微博客户端返回的数据。
        // 执行成功，返回 true，并调用 {@link IWeiboHandler.Response#onResponse}；
        // 失败返回 false，不调用上述回调
        if (savedInstanceState != null) {
            weiboShareSDK.handleWeiboResponse(getIntent(), this);
        }
        sendMultiMessage(true);

    }
    public TextObject getTextObj(){
        TextObject message=new TextObject();
        message.text=weiboMessage;
        return message;
    }
    private void sendMultiMessage(boolean hasText) {

        // 1. 初始化微博的分享消息
        WeiboMultiMessage weiboMessage = new WeiboMultiMessage();
        if (hasText) {
            weiboMessage.textObject = getTextObj();
        }
        // 2. 初始化从第三方到微博的消息请求
        SendMultiMessageToWeiboRequest request = new SendMultiMessageToWeiboRequest();
        // 用transaction唯一标识一个请求
        request.transaction = String.valueOf(System.currentTimeMillis());
        request.multiMessage = weiboMessage;

        // 3. 发送请求消息到微博，唤起微博分享界面


        AuthInfo authInfo = new AuthInfo(this, Constants.APP_KEY, Constants.REDIRECT_URL, Constants.SCOPE);
        Oauth2AccessToken accessToken = AccessTokenKeeper.readToken(getApplicationContext());
        String token = "";
        if (accessToken != null) {
            token = accessToken.getToken();
        }
        weiboShareSDK.sendRequest(this, request, authInfo, token, new WeiboAuthListener() {

            @Override
            public void onWeiboException( WeiboException arg0 ) {
            }

            @Override
            public void onComplete( Bundle bundle ) {
                // TODO Auto-generated method stub
                Oauth2AccessToken newToken = Oauth2AccessToken.parseAccessToken(bundle);
                AccessTokenKeeper.writeToken(getApplicationContext(), newToken);
                Toast.makeText(getApplicationContext(), "onAuthorizeComplete token = " + newToken.getToken(), 0).show();
            }

            @Override
            public void onCancel() {
            }
        });
    }

    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);

        // 从当前应用唤起微博并进行分享后，返回到当前应用时，需要在此处调用该函数
        // 来接收微博客户端返回的数据；执行成功，返回 true，并调用
        // {@link IWeiboHandler.Response#onResponse}；失败返回 false，不调用上述回调
        weiboShareSDK.handleWeiboResponse(intent, this);
    }
    public void onResponse(BaseResponse baseResp) {
        if(baseResp!= null){
            switch (baseResp.errCode) {
                case WBConstants.ErrorCode.ERR_OK:
                    Toast.makeText(this, R.string.weibosdk_demo_toast_share_success, Toast.LENGTH_LONG).show();
                    break;
                case WBConstants.ErrorCode.ERR_CANCEL:
                    Toast.makeText(this, R.string.weibosdk_demo_toast_share_canceled, Toast.LENGTH_LONG).show();
                    break;
                case WBConstants.ErrorCode.ERR_FAIL:
                    Toast.makeText(this,
                            getString(R.string.weibosdk_demo_toast_share_failed) + "Error Message: " + baseResp.errMsg,
                            Toast.LENGTH_LONG).show();
                    break;
            }
        }
    }

}



